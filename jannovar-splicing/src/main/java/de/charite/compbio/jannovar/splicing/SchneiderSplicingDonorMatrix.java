package de.charite.compbio.jannovar.splicing;

public class SchneiderSplicingDonorMatrix extends MatrixData {

	private static double[][] columns = { { -0.12, 0.28, -0.10, -0.09 }, { -0.05, 0.20, 0.14, -0.34 },
			{ 0.02, 0.12, 0.00, -0.15 }, { -0.02, 0.11, 0.15, -0.28 }, { -0.30, 0.25, 0.23, -0.28 },
			{ -0.02, -0.03, 0.24, -0.23 }, { -0.02, 0.15, 0.08, -0.24 }, { -0.24, 0.34, 0.03, -0.22 },
			{ -0.09, 0.19, -0.05, -0.07 }, { -0.12, 0.06, 0.05, 0.00 }, { -0.25, 0.30, 0.19, -0.34 },
			{ 0.04, 0.28, -0.10, -0.27 }, { 0.05, 0.03, 0.11, -0.21 }, { -0.23, 0.16, 0.20, -0.19 },
			{ 0.03, -0.06, 0.31, -0.37 }, { 0.05, 0.05, 0.08, -0.20 }, { -0.06, 0.19, 0.16, -0.36 },
			{ -0.19, 0.11, 0.10, -0.04 }, { -0.13, 0.22, -0.04, -0.08 }, { -0.34, 0.37, 0.09, -0.22 },
			{ -0.05, 0.09, 0.06, -0.11 }, { -0.11, 0.33, -0.14, -0.14 }, { -0.21, 0.05, 0.30, -0.20 },
			{ -0.07, -0.01, 0.37, -0.39 }, { 0.08, -0.01, -0.01, -0.07 }, { -0.16, 0.21, 0.23, -0.37 },
			{ -0.09, 0.17, 0.15, -0.28 }, { 0.01, 0.20, -0.08, -0.15 }, { -0.18, 0.24, 0.19, -0.33 },
			{ 0.04, 0.01, 0.21, -0.30 }, { -0.18, 0.28, -0.00, -0.15 }, { -0.18, 0.09, 0.18, -0.13 },
			{ -0.11, -0.09, 0.38, -0.26 }, { 0.10, 0.07, 0.10, -0.30 }, { -0.12, 0.28, 0.00, -0.21 },
			{ 0.06, 0.14, 0.04, -0.27 }, { 0.02, 0.20, -0.03, -0.22 }, { -0.16, 0.24, 0.14, -0.28 },
			{ -0.08, 0.17, 0.01, -0.12 }, { 0.02, 0.32, -0.19, -0.21 }, { -0.16, 0.18, 0.15, -0.22 },
			{ 0.10, -0.01, 0.15, -0.27 }, { 0.04, 0.04, 0.01, -0.09 }, { -0.05, 0.02, 0.24, -0.25 },
			{ 0.15, -0.05, 0.01, -0.11 }, { 0.08, 0.12, -0.18, -0.04 }, { 0.13, 0.23, -0.01, -0.43 },
			{ 0.42, 0.58, -0.58, -1.02 }, { 1.25, -0.77, -1.03, -0.87 }, { -1.41, -2.39, 1.64, -1.67 },
			{ -8.82, -7.23, 1.99, -5.65 }, { -5.65, -5.36, -6.01, 1.98 }, { 1.12, -3.64, 0.72, -3.35 },
			{ 1.51, -1.55, -1.05, -1.58 }, { -1.80, -2.22, 1.71, -2.19 }, { -0.68, -0.51, -0.32, 0.90 },
			{ 0.05, -0.17, 0.44, -0.48 }, { -0.36, 0.26, -0.01, 0.05 }, { -0.29, 0.28, 0.03, -0.08 },
			{ -0.41, 0.12, 0.20, 0.02 }, { -0.38, 0.19, 0.21, -0.10 }, { -0.41, 0.06, 0.25, 0.01 },
			{ -0.40, 0.20, 0.15, -0.02 }, { -0.31, 0.21, 0.13, -0.09 }, { -0.33, 0.23, 0.02, 0.03 },
			{ -0.25, 0.06, 0.11, 0.05 }, { -0.57, 0.07, 0.34, 0.02 }, { -0.27, 0.09, 0.12, 0.03 },
			{ -0.49, 0.22, 0.07, 0.10 }, { -0.38, 0.12, 0.20, -0.00 }, { -0.48, 0.07, 0.20, 0.12 },
			{ -0.29, 0.03, 0.28, -0.08 }, { -0.29, -0.01, 0.30, -0.06 }, { -0.41, 0.02, 0.35, -0.06 },
			{ -0.32, 0.12, 0.21, -0.07 }, { -0.10, 0.05, 0.14, -0.11 }, { -0.37, 0.05, 0.20, 0.06 },
			{ -0.40, 0.11, 0.30, -0.10 }, { -0.22, 0.08, 0.15, -0.04 }, { -0.47, -0.05, 0.33, 0.07 },
			{ -0.16, -0.07, 0.31, -0.13 }, { -0.30, 0.07, 0.24, -0.06 }, { -0.28, 0.03, 0.23, -0.03 },
			{ -0.16, -0.13, 0.31, -0.08 }, { -0.35, 0.03, 0.24, 0.01 }, { -0.22, 0.11, 0.24, -0.18 },
			{ -0.23, 0.11, 0.27, -0.21 }, { -0.27, 0.00, 0.30, -0.09 }, { -0.02, -0.05, 0.25, -0.22 },
			{ -0.16, 0.02, 0.26, -0.16 }, { -0.18, 0.15, 0.03, -0.02 }, { -0.23, 0.00, 0.26, -0.07 },
			{ -0.27, -0.05, 0.35, -0.10 }, { -0.35, -0.00, 0.32, -0.04 }, { -0.27, -0.01, 0.19, 0.05 },
			{ -0.28, -0.09, 0.29, 0.02 }, { -0.21, -0.00, 0.18, -0.00 }, { -0.26, -0.06, 0.27, 0.00 },
			{ -0.17, -0.01, 0.22, -0.06 }, { -0.23, -0.00, 0.22, -0.02 }, { -0.12, -0.04, 0.11, 0.04 } };

	@Override
	protected double[] getWeights(int pos) {
		return columns[pos - getMinOffset()];
	}

	@Override
	public int getMinOffset() {
		return -50;
	}

	@Override
	public int getMaxOffset() {
		return 50;
	}

}

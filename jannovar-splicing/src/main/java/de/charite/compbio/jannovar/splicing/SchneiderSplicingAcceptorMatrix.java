package de.charite.compbio.jannovar.splicing;

public class SchneiderSplicingAcceptorMatrix extends MatrixData {

	private static double[][] columns = { { -0.31, -0.03, 0.11, 0.18 }, { -0.13, -0.08, 0.31, -0.14 },
		{ -0.35, 0.15, 0.09, 0.05 }, { -0.16, 0.09, 0.06, -0.00 }, { -0.25, -0.04, 0.10, 0.16 },
		{ -0.33, 0.11, 0.07, 0.10 }, { -0.22, 0.00, 0.11, 0.08 }, { -0.18, -0.03, 0.10, 0.09 },
		{ -0.33, 0.13, -0.10, 0.24 }, { -0.19, 0.09, 0.08, 0.00 }, { -0.16, 0.14, -0.06, 0.06 },
		{ -0.34, 0.05, 0.13, 0.12 }, { -0.32, 0.13, 0.08, 0.06 }, { -0.10, 0.09, -0.04, 0.05 },
		{ -0.26, 0.18, -0.07, 0.11 }, { -0.32, 0.17, -0.00, 0.10 }, { -0.22, 0.14, -0.09, 0.14 },
		{ -0.28, 0.21, -0.08, 0.11 }, { -0.19, 0.20, -0.18, 0.12 }, { -0.21, 0.24, -0.28, 0.17 },
		{ -0.22, 0.20, -0.20, 0.17 }, { -0.24, 0.26, -0.24, 0.15 }, { -0.11, 0.24, -0.39, 0.17 },
		{ -0.09, 0.12, -0.31, 0.21 }, { -0.18, 0.27, -0.37, 0.19 }, { -0.07, 0.28, -0.64, 0.25 },
		{ -0.21, 0.36, -0.59, 0.25 }, { -0.26, 0.26, -0.57, 0.37 }, { -0.18, 0.32, -0.61, 0.27 },
		{ -0.09, 0.28, -0.76, 0.33 }, { -0.42, 0.31, -0.70, 0.48 }, { -0.40, 0.20, -0.58, 0.51 },
		{ -0.67, 0.38, -0.46, 0.42 }, { -0.77, 0.40, -0.90, 0.64 }, { -0.83, 0.45, -0.79, 0.58 },
		{ -0.93, 0.40, -0.71, 0.62 }, { -1.19, 0.40, -0.90, 0.77 }, { -1.44, 0.40, -0.90, 0.83 },
		{ -1.59, 0.46, -1.08, 0.86 }, { -1.63, 0.41, -1.30, 0.96 }, { -1.78, 0.35, -1.34, 1.03 },
		{ -1.64, 0.38, -1.22, 0.96 }, { -1.40, 0.49, -1.11, 0.81 }, { -1.28, 0.65, -1.28, 0.69 },
		{ -1.36, 0.62, -1.42, 0.77 }, { -1.79, 0.69, -1.95, 0.88 }, { -1.76, 0.44, -2.06, 1.07 },
		{ -0.14, 0.20, -0.01, -0.08 }, { -2.68, 1.53, -4.37, -0.13 }, { 1.98, -5.31, -5.96, -5.31 },
		{ -5.45, -5.19, 1.98, -6.45 }, { 0.05, -0.91, 1.00, -1.21 }, { -0.03, -0.49, -0.07, 0.44 },
		{ -0.03, -0.03, -0.05, 0.11 }, { -0.12, 0.17, 0.02, -0.08 }, { -0.03, 0.21, -0.32, 0.10 },
		{ -0.14, 0.28, -0.03, -0.15 }, { 0.02, -0.01, 0.16, -0.19 }, { 0.05, 0.09, 0.04, -0.20 },
		{ -0.08, -0.03, 0.23, -0.14 }, { -0.02, -0.08, 0.34, -0.31 }, { 0.09, -0.11, 0.23, -0.27 },
		{ -0.03, 0.03, 0.13, -0.15 }, { 0.08, 0.15, 0.07, -0.36 }, { 0.03, 0.09, -0.12, -0.02 },
		{ -0.00, 0.10, 0.13, -0.25 }, { -0.01, 0.21, 0.09, -0.35 }, { 0.14, 0.05, 0.01, -0.22 },
		{ -0.09, 0.16, 0.21, -0.37 }, { 0.06, -0.03, 0.30, -0.41 }, { 0.02, -0.03, 0.11, -0.11 },
		{ -0.07, 0.14, 0.22, -0.36 }, { 0.14, 0.09, -0.01, -0.25 }, { -0.01, 0.13, -0.04, -0.10 },
		{ -0.12, 0.23, 0.14, -0.33 }, { 0.15, 0.12, 0.01, -0.34 }, { 0.02, 0.18, -0.03, -0.20 },
		{ -0.04, -0.02, 0.21, -0.18 }, { -0.04, -0.05, 0.33, -0.32 }, { 0.03, -0.03, 0.05, -0.05 },
		{ -0.12, 0.01, 0.27, -0.22 }, { -0.05, 0.13, 0.13, -0.24 }, { -0.02, 0.07, -0.04, -0.00 },
		{ -0.16, 0.14, 0.21, -0.23 }, { 0.03, 0.01, 0.10, -0.15 }, { 0.02, 0.13, -0.11, -0.05 },
		{ -0.09, 0.11, 0.09, -0.13 }, { 0.01, -0.10, 0.32, -0.29 }, { 0.06, -0.02, 0.14, -0.21 },
		{ -0.13, 0.16, 0.12, -0.18 }, { 0.13, 0.03, 0.16, -0.37 }, { 0.04, 0.22, -0.11, -0.19 },
		{ -0.07, 0.20, 0.11, -0.29 }, { 0.04, 0.03, 0.16, -0.26 }, { 0.07, 0.06, 0.07, -0.22 },
		{ -0.02, -0.08, 0.31, -0.27 }, { 0.04, -0.06, 0.26, -0.29 }, { -0.04, 0.13, 0.10, -0.21 },
		{ -0.02, 0.08, 0.15, -0.24 }, { 0.16, -0.12, 0.21, -0.31 }, { 0.09, 0.17, -0.09, -0.19 } };

	@Override
	protected double[] getWeights(int pos) {
		return columns[pos - getMinOffset()];
	}

	@Override
	public int getMinOffset() {
		return -50;
	}

	@Override
	public int getMaxOffset() {
		return 50;
	}

}
